% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/replace_outliers.R
\name{replace_outliers}
\alias{replace_outliers}
\title{Replace Local Outliers}
\usage{
replace_outliers(x, width, t0 = 3, na.rm = FALSE, return = c("median", "NA"))
}
\arguments{
\item{x}{A numeric vector.}

\item{width}{A numeric scalar for the window length of \verb{(2 Ã— width + 1)} samples.}

\item{t0}{A numeric scalar for the outlier threshold, default is 3
(Pearson's rule).}

\item{na.rm}{A logical indicating whether missing values should be ignored
(\code{TRUE}) before the filter is applied. Otherwise (\code{FALSE}, the \emph{default}) will
throw an error (see \emph{Details}).}

\item{return}{Indicates whether outliers should be replaced with the
local \emph{"median"} value (the \emph{default}), or returned as \code{NA}.}
}
\value{
A numeric vector of filtered data.
}
\description{
Detect local outliers in vector data with a Hampel filter using median
absolute deviation (MAD), and replaces with the local median value or \code{NA}.
}
\details{
The \emph{"median absolute deviation"} computation is done in the \verb{[-width...width]}
vicinity of each point at least \code{width} steps away from the end points of the
interval. At the lower and upper end the time series values are preserved.

A high threshold makes the filter more forgiving, a low one will declare
more points to be outliers. \code{t0 = 3} (the \emph{default}) corresponds to Pearson's
3 sigma edit rule, \code{t0 = 0} to Tukey's median filter.

Missing values (\code{NA}) in the numeric vector will cause an error unless
\code{na.rm = TRUE}. Then \code{NA} values are removed for processing, and restored in
the returned vector.

The default \code{return = "median"} will replace outliers with the local
median value, as in \code{\link[pracma:hampel]{pracma::hampel()}}. Otherwise, outliers will be
returned as \code{NA} (both returns are equally computationally expensive).
}
\examples{
set.seed(8421)
x <- numeric(1024)
z <- rnorm(1024)
x[1] <- z[1]
for (i in 2:1024) {
    x[i] <- 0.4*x[i-1] + 0.8*x[i-1]*z[i-1] + z[i]
}
x[150:200] <- NA ## generate NA values
# replace_outliers(x, width = 20, na.rm = FALSE) ## returns error
y <- replace_outliers(x, width = 20, na.rm = TRUE)
ind <- which(x != y) ## identify outlier indices
outliers <- x[ind] ## identify outlier values

\dontrun{
plot(1:1024, x, type = "l")
points(ind, outliers, pch = 21, col = "darkred")
lines(y, col = "blue")
}

}
\seealso{
\code{\link[pracma:hampel]{pracma::hampel()}}
}
