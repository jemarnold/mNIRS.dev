% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_kinetics.R
\name{process_kinetics}
\alias{process_kinetics}
\alias{process_kinetics.monoexponential}
\alias{process_kinetics.sigmoidal}
\alias{process_kinetics.half_time}
\alias{process_kinetics.peak_slope}
\title{Fit Kinetics}
\usage{
\method{process_kinetics}{monoexponential}(
  y,
  x = NULL,
  data = NULL,
  x0 = 0,
  window = 30,
  method = c("monoexponential", "sigmoidal", "half_time", "peak_slope"),
  verbose = TRUE,
  ...
)

\method{process_kinetics}{sigmoidal}(
  y,
  x = NULL,
  data = NULL,
  x0 = 0,
  window = 30,
  method = c("monoexponential", "sigmoidal", "half_time", "peak_slope"),
  verbose = TRUE,
  ...
)

\method{process_kinetics}{half_time}(
  y,
  x = NULL,
  data = NULL,
  x0 = 0,
  window = 30,
  method = c("monoexponential", "sigmoidal", "half_time", "peak_slope"),
  verbose = TRUE,
  ...
)

\method{process_kinetics}{peak_slope}(
  y,
  x = NULL,
  data = NULL,
  x0 = 0,
  window = 30,
  method = c("monoexponential", "sigmoidal", "half_time", "peak_slope"),
  verbose = TRUE,
  ...
)
}
\arguments{
\item{y}{A numeric vector of the response variable, or the name of the
variable within a dataframe.}

\item{x}{An \emph{optional} numeric vector of the predictor variable, or the name
of the variable within a dataframe. \emph{Defaults} to using the index of
\code{x = seq_along(y)}.}

\item{data}{An \emph{optional} dataframe containing the predictor and response
variables named in \code{x} and \code{y}. Names for \code{x} and \code{y} must be in quotations.}

\item{x0}{(\emph{Default = 0}) A numeric scalar indicating the value of the predictor variable \code{x}
representing the start of the kinetics event.}

\item{window}{(\emph{Default = 30}) A numeric scalar indicating the local window in units of
the predictor variable \code{x} after the kinetics extreme (peak or trough) value
to look for subsequent greater extremes. The kinetics model will be fit to the
data up to the first local extreme with no subsequent greater extremes within
the lesser of either the \code{window} or the limits of the data.}

\item{method}{Indicates which model to evaluate the kinetics event
(see \emph{Details} for method parametrisation).
\describe{
\item{\code{method = "monoexponential"}}{A four-parameter monoexponential
association function in the form:
\code{ifelse(x <= TD, A, A + (B - A) * (1 - exp((TD - x) / tau)))}.}
\item{\code{method = "sigmoidal"}}{A four-parameter generalised logistic
(sigmoidal) function in the form:
\code{A + (B - A) / (1 + exp((xmid - x) / scal))}.}
\item{\code{method = "half_time"}}{A non-parametric estimate of the time
to recover half of the total reoxygenation amplitude.}
\item{\code{method = "peak_slope"}}{A non-parametric estimate of the time
to reach the peak rolling linear regression slope within a window
defined by \code{width}.}
}}

\item{verbose}{A logical. \code{TRUE} (\emph{default}) will return warnings and
messages which can be used for data error checking. \code{FALSE} will silence these
messages. Errors will always be returned.}

\item{...}{Additional arguments.
\describe{
\item{\code{width}}{A numeric scalar defining the window width (in units of
the predictor variable \code{x}) for rolling slope calculations (only used
for \verb{method =} \emph{\code{"peak_slope"}}).}
\item{\verb{align = c(}\emph{\verb{"center", "left", "right"}}\verb{)}}{Specifies the window
alignment of \code{width} as \emph{"center"} (\emph{the default}), \emph{"left"},
or \emph{"right"}. Where \emph{"left"} is \emph{forward looking}, and \emph{"right"}
is \emph{backward looking} by the window \code{width} from the current
observation (only used for \verb{method =} \emph{\code{"peak_slope"}}).}
\item{\emph{fixed parameters}}{Parameters (coefficients) of the parametric
models (\emph{"monoexponential"} and \emph{"sigmoidal"}) can be defined
a priori and fixed, to exclude them from the model fitting
optimisation. e.g., \code{A = 10} will define the function
\code{SSmonoexp(x, A = 10, B, TD, tau)}.}
}}
}
\value{
A list of class \code{mNIRS.kinetics} with components \code{L$...}:
\item{\code{method}}{The kinetics method used.}
\item{\code{model}}{The model object.}
\item{\code{equation}}{The equation of the kinetics model used.}
\item{\code{data}}{A dataframe of original and fitted model data.}
\item{\code{fitted}}{A vector of fitted values returned by the model.}
\item{\code{residuals}}{A vector of residuals between original and fitted
values returned by the model.}
\item{\code{x0}}{The value of the predictor variable indicating the start of
kinetics.}
\item{\code{coefs}}{A dataframe of model coefficients, including manually
fixed parameters.}
\item{\code{diagnostics}}{A dataframe of model goodness-of-fit metrics
(\code{AIC}, \code{BIC}, \code{R2adj} \code{RMSE}, \code{MAE}, \code{MAPE}).}
\item{\code{call}}{The model call.}
}
\description{
Perform parametric curve fitting or non-parametric estimation of mNIRS kinetics
on vector data.
}
\details{
\code{method \%in\% c("monoexponential", "sigmoidal")} use \link[stats:nls]{nls()}
for nonlinear (weighted) least-squares estimates.

Model Parameterisation

"monoexponential": A four-parameter monoexponential association function
in the form: \code{ifelse(x <= TD, A, A + (B - A) * (1 - exp((TD - x) / tau)))}.
\itemize{
\item \code{A}: text
\item \code{B}: text
\item \code{TD}: text
\item \code{tau}: text
\item \code{MRT}: text
}

"sigmoidal": A four-parameter generalised logistic (sigmoidal) function
in the form: \code{A + (B - A) / (1 + exp((xmid - x) / scal))}.
\itemize{
\item \code{A}: text
\item \code{B}: text
\item \code{xmid}: text
\item \code{scal}: text
}

"half_time": A non-parametric estimate of the time to recover half of
the total reoxygenation amplitude.
\itemize{
\item \code{A}: text
\item \code{B}: text
\item \code{half_value}: text
}

"peak_slope": A non-parametric estimate of the time to reach the peak
rolling linear regression slope within a window defined by \code{width}.
\itemize{
\item \code{A}: text
\item \code{B}: text
\item \code{x_fitted}: text
\item \code{peak_slope}: text
}
}
\examples{
set.seed(13)
x1 <- seq(-10, 60, by = 2)
A <- 10; B <- 100; TD <- 5; tau <- 12
y1 <- monoexponential(x1, A, B, TD, tau) + rnorm(length(x1), 0, 3)

## monoexponential kinetics ===============================
model <- process_kinetics(y1, x1, method = "monoexponential")
model

\dontrun{
## require(ggplot2)
plot(model, plot_coefs = TRUE, plot_diagnostics = TRUE, plot_residuals = TRUE)
}

## sigmoidal kinetics ===============================
model <- process_kinetics(y1, x1, method = "sigmoidal")
model

\dontrun{
## require(ggplot2)
plot(model, plot_coefs = TRUE, plot_diagnostics = TRUE, plot_residuals = TRUE)
}

## half recovery time ===============================
model <- process_kinetics(y1, x1, method = "half_time")
model

\dontrun{
## require(ggplot2)
plot(model, plot_coefs = TRUE, plot_diagnostics = TRUE, plot_residuals = TRUE)
}

## peak slope ===============================
model <- process_kinetics(y1, x1, method = "peak_slope", width = 10)
model

\dontrun{
## require(ggplot2)
plot(model, plot_coefs = TRUE, plot_diagnostics = TRUE, plot_residuals = TRUE)
}

}
\seealso{
\code{\link[stats:nls]{stats::nls()}}, \code{\link[stats:SSasymp]{stats::SSasymp()}}, \code{\link[stats:SSfpl]{stats::SSfpl()}},
}
